PART
{

//Basic

	author = Daishi & Paul Kingtiger 
	module = Part
	name = USCylindricalShroud250
	rescaleFactor = 1
	tags = Universal Storage Shroud Payload Apollo
			
	MODEL
	{
	model = UniversalStorage2/Parts/Shrouds/CylindricalShroud250
	scale = 1, 1, 1
	}

//AttachmentRules

	attachRules = 1,0,1,1,0

//Description	

	category = Utility
	description = A large, upwards expanding shroud, suitable for occluding Octocore trusses (and their contents) from aerodynamic stress. Place on the bottom of the assembled core, and toggle the height to match. Features four large jettisonable access doors for EVA servicing.
	manufacturer = New Horizons & Nox Industrial
	subcategory = 0
	title = Universal Storage Cylindrical Shroud (2.5m)

//Costs & RD

	cost = 500
	entryCost = 2500
	TechRequired = advConstruction

//Physical

	bulkheadProfiles = size2
	crashTolerance = 15
	fuelCrossFeed = True
	mass = 0.5
	maxTemp = 1200
	thermalMassModifier = 4.0

//Drag. "A" cubes are core heights, "B" cubes are opened bays for said height. 

	angularDrag = 1
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2

	DRAG_CUBE
	{
		cube = A0, 1.543,0.7515,2.533, 1.543,0.7518,2.533, 5.121,0.935,0.5763, 5.121,0.9293,0.3621, 1.543,0.7536,1.84, 1.542,0.7534,1.84, 0,0.05732,0, 2.56,0.603,2.56
		cube = B0, 1.757,0.7782,2.613, 1.757,0.7791,2.49, 5.466,0.9387,0.5983, 5.467,0.9322,0.6676, 1.305,0.7056,4.374, 1.305,0.7002,4.374, -0.01172,0.05732,-0.0002072, 2.66,0.603,4.371
		cube = A1, 2.575,0.7638,2.479, 2.575,0.7638,2.479, 5.121,0.9326,0.9928, 5.121,0.9289,0.3627, 2.575,0.7578,2.479, 2.575,0.758,2.479, 0,0.2644,0, 2.56,1.017,2.56
		cube = B1, 3.023,0.7967,2.613, 3.023,0.7951,2.367, 5.46,0.9358,1.012, 5.46,0.9313,1.064, 2.053,0.7057,4.374, 2.053,0.6968,4.374, -0.01172,0.2644,-0.0002072, 2.66,1.017,4.371
		cube = A2, 3.622,0.7715,2.479, 3.623,0.7714,2.479, 5.121,0.9333,1.393, 5.121,0.9292,0.3689, 3.623,0.7709,2.479, 3.627,0.7712,2.609, 0,0.4668,0, 2.56,1.422,2.56
		cube = B2, 4.29,0.81,2.613, 4.29,0.8082,2.524, 5.461,0.9366,1.418, 5.461,0.9318,1.469, 2.808,0.7122,4.374, 2.808,0.7009,4.374, -0.01172,0.4668,-0.0002072, 2.66,1.422,4.371
		cube = A3, 4.65,0.7751,2.479, 4.65,0.7751,2.479, 5.121,0.9337,1.794, 5.121,0.9289,0.373, 4.651,0.774,2.479, 4.651,0.774,2.479, 0,0.6678,0, 2.56,1.824,2.56
		cube = B3, 5.518,0.8098,2.613, 5.518,0.81,2.49, 5.461,0.937,1.818, 5.461,0.9316,1.873, 3.552,0.7084,4.374, 3.552,0.6995,4.374, -0.01172,0.6678,-0.0002072, 2.66,1.824,4.371
		cube = A4, 4.72,0.7722,2.273, 4.72,0.7717,2.273, 5.121,0.9594,1.718, 5.121,0.9292,0.3727, 4.721,0.7729,2.457, 4.721,0.7738,2.457, 0,0.6888,0, 2.56,1.866,2.56
		cube = B4, 8.725,0.846,2.555, 8.731,0.8514,2.262, 5.324,0.9608,1.718, 5.324,0.931,1.758, 2.915,0.6541,3.538, 2.915,0.6578,5.182, 0,0.6888,0.000149, 2.56,1.866,5.107
	}

	
//Plugin Control. Do not change load order! Index0 must always be animategeneric, Index1 always the dragswitch module. ModuleCargoBay must always reference index0 to enable drag occulsion. 

	MODULE
	{
		name = USAnimateGeneric
		dragModuleIndex = 1
		primaryAnimationName = Take 001
		secondaryAnimationName = Take 002
		primaryAvailableInEVA = true
		primaryAvailableInVessel = true
		primaryAvailableInEditor = true
		primaryActionAvailable = true
		secondaryAvailableInEVA = true
		secondaryAvailableInVessel = true
		secondaryAvailableInEditor = true
		secondaryActionAvailable = true
		combinedAvailableInEVA = true
		combinedAvailableInVessel = true
		combinedAvailableInEditor = true
		combinedActionAvailable = true
		
		//jettisonAvailable = true
		//jettisonIndices = 5;6;7;8
		
		SwitchID = 0
		AnimationControlState = 3;3;3;3;1
	}
	
	MODULE
	{
		name = USDragSwitch
		SwitchID = 0
		DragCubes = A0,B0;A1,B1;A2,B2;A3,B3;A4,B4
	}
		
	MODULE
	{
		name = ModuleCargoBay
		DeployModuleIndex = 0
		lookupCenter = -0.3,0.2,-0.07
		closedPosition = 0
		lookupRadius = 2.5
	}
	
	// MODULE UNUSED
	// {
	// 	name = ModuleJettison
	// 	jettisonName = polySurface291
	// 	bottomNodeName = OuterNode
	// 	allowShroudToggle = False
	//  hideJettisonMenu = True
	// 	isFairing = False
	// 	jettisonedObjectMass = 0.01
	// 	jettisonForce = 5
	// 	jettisonDirection = -1 0 1
	// 	stagingEnable = True
	// 	stagingToggleEnabledEditor = False
	// 	stagingToggleEnabledFlight = False
	// }
	
	MODULE
	{
		name = USSwitchControl
		SwitchID = 0
		ButtonName = Height and Function
		ShowPreviousButton = False		
		ObjectNames = Single height;Double height;Triple height;Quad height;Payload Bay
	}
	
	MODULE
	{
		name = USMeshSwitch
		SwitchID = 0
		MeshTransforms = OneHigh;TwoHigh;ThreeHigh;FourHigh;PayloadBay
		AffectColliders = True
	}
	
	MODULE
	{
		name = USNodeSwitch
		SwitchID = 0
		AttachNodes = HeightOne;HeightTwo;HeightThree;HeightFour;HeightPayload
	}

	MODULE
	{
		name = USCostSwitch
		SwitchID = 0
		DisplayCurrentModeCost = True
		AddedCost = 0;500;1000;1500;1500
	}
	
	MODULE
	{
		name = USMassSwitch
		SwitchID = 0
		DisplayCurrentModeMass = True
		AddedMass = 0;0.25;0.5;0.75;0.75
	}
	
	MODULE
	{
		name = USSwitchControl
		SwitchID = 1
		ButtonName = Appearance
		ShowPreviousButton = False		
		ObjectNames = Apollo;Gemini;Porkjet;Saturn
	}
	
	MODULE
	{
		name = USMeshSwitch
		SwitchID = 1
		MeshTransforms = OneHighApollo,TwoHighApollo,ThreeHighApollo,FourHighApollo,PayloadApollo;OneHighGemini,TwoHighGemini,ThreeHighGemini,FourHighGemini,PayloadGemini;OneHighPorkjet,TwoHighPorkjet,ThreeHighPorkjet,FourHighPorkjet,PayloadPorkjet;OneHighSaturn,TwoHighSaturn,ThreeHighSaturn,FourHighSaturn,PayloadSaturn		
		AffectColliders = True
	}
	
	
//Stack node definitions


	NODE
	{
	 name = OuterNode
	 transform = OuterNode
	 size = 1
	 method = FIXED_JOINT
	}

	NODE
	{
 	 name = InnerNode
	 transform = InnerNode
	 size = 1
	 method = FIXED_JOINT
	}
	
	NODE
	{
 	 name = PayloadNode1
	 transform = PayloadNode1
	 size = 1
	 method = FIXED_JOINT
	}
	
	NODE
	{
 	 name = PayloadNode2
	 transform = PayloadNode2
	 size = 1
	 method = FIXED_JOINT
	}
	
	NODE
	{
 	 name = PayloadNode3
	 transform = PayloadNode3
	 size = 1
	 method = FIXED_JOINT
	}
	
	
//Node Groups

	MODULE
	{
		name = ModuleStructuralNode
		rootObject = HeightOne
		attachNodeNames = InnerNode,OuterNode
	}
	
	MODULE
	{
		name = ModuleStructuralNode
		rootObject = HeightTwo	
		attachNodeNames = InnerNode,OuterNode
	}
	
	MODULE
	{
		name = ModuleStructuralNode
		rootObject = HeightThree
		attachNodeNames = InnerNode,OuterNode
	}
	
	MODULE
	{
		name = ModuleStructuralNode
		rootObject = HeightFour
		attachNodeNames = InnerNode,OuterNode
	}
	
	MODULE
	{
		name = ModuleStructuralNode
		rootObject = HeightPayload
		attachNodeNames = InnerNode,OuterNode,PayloadNode1,PayloadNode2,PayloadNode3
	}
	
}