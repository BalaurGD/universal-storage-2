PART
{
// Common to all parts in the mod
// ------------------------------

		module = Part
		author = Daishi, DMagic, and Paul Kingtiger 
		manufacturer = New Horizons & Nox Industrial
		subcategory = 0

		
	
// Stuff that gets tweaked and balanced a lot
// ------------------------------------------

		title = Universal Storage Guidance Computer
		category = Control
		
		cost = 66
		mass = 0.01
	
		TechRequired = basicScience
		entryCost = 4200	
	
		maxTemp = 1200	
		
		fuelCrossFeed = True
		
		bulkheadProfiles = wedge
		crashTolerance = 5	
	

	// Science Container
		MODULE
		{
			name = ModuleScienceContainer
			reviewActionName = #autoLOC_502201 //#autoLOC_502201 = Review Stored Data
			storeActionName = #autoLOC_502202 //#autoLOC_502202 = Store Experiments
			evaOnlyStorage = False
			storageRange = 2.0
		}


// Stuff in here should have stable values
// ---------------------------------------

		description = A top of the line, 2MHz digital computer. While best utilized to experience the pinnacle of next-gen gaming; the KSC would rather you use this workhorse to plot your way to the stars. Features pre-woven memory and a convenient carry handle.

		rescaleFactor = 1
	
	
	
// This shouldn't be changing at all!
// ----------------------------------

		tags = Universal Storage Wedge DSKY Guidance Computer
		
		attachRules = 1,0,1,1,0
		
		//KIS
		MODULE:NEEDS[KIS]
		{
			name = ModuleKISItem
			shortcutKeyAction = drop
			useName = use
			usableFromEva = false
			usableFromContainer = false
			usableFromPod = false
			usableFromEditor = false
			stackable = false
			volumeOverride = 0
			editorItemsCategory = true
			moveSndPath = KIS/Sounds/itemMove
			equipSlot = jetpack
			equipMode = part
			equipSlot = <null>
			equipSkill = <null>
			equipRemoveHelmet = false
			equipMeshName = jetpack_base01
			equipBoneName = bn_jetpack01
			equipPos = (0,-0.05,-0.3)
			equipDir = (0,270,0)
			carriable = true
			allowPartAttach = 1   
			allowStaticAttach = 0
		}
		
	
// Don't edit anything below this line.  Here be dragons!
// ------------------------------------------------------

		name = USGuidanceComputer

	// Drag
		angularDrag = 1
		dragModelType = default
		maximum_drag = 0.2
		minimum_drag = 0.2

		DRAG_CUBE
		{
			cube = A0, 0.3288,0.8916,0.5346, 0.3265,0.8726,0.583, 0.2238,0.9466,0.7513, 0.222,0.9016,0.6095, 0.2912,0.9138,0.5084, 0.2902,0.8752,0.4591, 0.02138,0.03299,0.01759, 0.5252,0.7037,0.5856
		
		}

	// Model call		
		MODEL
		{
		model = UniversalStorage2/Parts/Electrical/GuidanceComputer
		scale = 1, 1, 1
		}

	// Wedge attach node definitions
		NODE
		{
			name = attach
			transform = attach
			size = 0
			method = HINGE_JOINT
		}
	
}


	// Kerbal Operating System (kOS)
		@PART[USGuidanceComputer]:NEEDS[kOS]
		{	
			// @cost = 2200
			
			// @TechRequired = unmannedTech
			// @entryCost = 4200
			
			MODULE
			{
				name = kOSProcessor
				diskSpace = 0
				ECPerBytePerSecond = 0
				ECPerInstruction = 0
			}
				
			MODULE
			{
				name = PartStatsUpgradeModule
				showUpgradesInModuleInfo = true
				UPGRADES
				{
					UPGRADE 
					{
						name__ = USGuidanceComputer_kOS
						techRequired__ = unmannedTech
						entryCost = 4200
						title = Kerbal Operating System upgrade
						manufacturer = Universal Storage
						description = Software patch adds kOS compatibility, allowing for programmed missions.
						basicInfo = Whatever
						
						IsAdditiveUpgrade__ = false	ï»¿			
						PartStats
						{
							name = kOSProcessor
							diskSpace = 60000
							ECPerBytePerSecond = 0
							ECPerInstruction = 0.000004
						}
					}	
				}
			}

			
			PARTUPGRADE
			{
				name = USGuidanceComputer_kOS
				partIcon = USGuidanceComputer
				techRequired = unmannedTech
				entryCost = 4200
				cost = 0 // for display only; all parts implementing this will need a PartStatsUpgradeModule with cost = this.
				
				title = Kerbal Operating System upgrade
				basicInfo = Whatever
				manufacturer = Universal Storage
				description = Software patch adds kOS compatibility, allowing for programmed missions.
			}
		}

	// MechJeb2
		@PART[USGuidanceComputer]:NEEDS[MechJeb2]
		{	
			@cost = 750
			
			@TechRequired = flightControl
			@entryCost = 15000
			
			MODULE
			{
				name = MechJebCore
				MechJebLocalSettings 
				{
					MechJebModuleCustomWindowEditor { unlockTechs = flightControl }
					MechJebModuleSmartASS { unlockTechs = flightControl }
					MechJebModuleManeuverPlanner { unlockTechs = advFlightControl }
					MechJebModuleNodeEditor { unlockTechs = advFlightControl }
					MechJebModuleTranslatron { unlockTechs = advFlightControl }
					MechJebModuleWarpHelper { unlockTechs = advFlightControl }
					MechJebModuleAttitudeAdjustment { unlockTechs = advFlightControl }
					MechJebModuleThrustWindow { unlockTechs = advFlightControl }
					MechJebModuleRCSBalancerWindow { unlockTechs = advFlightControl }
					MechJebModuleRoverWindow { unlockTechs = fieldScience }
					MechJebModuleAscentGuidance { unlockTechs = unmannedTech }
					MechJebModuleLandingGuidance { unlockTechs = unmannedTech }
					MechJebModuleSpaceplaneGuidance { unlockTechs = unmannedTech }
					MechJebModuleDockingGuidance { unlockTechs = advUnmanned }
					MechJebModuleRendezvousAutopilotWindow { unlockTechs = advUnmanned }
					MechJebModuleRendezvousGuidance { unlockTechs = advUnmanned }
				}
			}
		}